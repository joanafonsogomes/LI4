@model IEnumerable<WebApplication1.Models.Venda>

@{
    ViewBag.Title = "Carrinho";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}


<head>
    <head>
        @section NotId {
            <li>
                <a href="@Url.Action("AluguerInfo", "Utilizador")">
                    <span class="glyphicon glyphicon-bell "></span>
                    Notificações
                    @{
                        int n = (int)@ViewData["noti"];
                        if (n > 0)
                        {

                            <span class="badge" style="background-color: #138AB2">@n</span>
                        }
                    }
                </a>
            </li>
        }
    </head>
    <style>
        html,
        html a {
            -webkit-font-smoothing: antialiased;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
        }

        /*were ruining the header and the footer*/
        body {
            font-family: 'Montserrat';
            margin: 0 auto;
        }

        a {
            border: 0 none;
            outline: 0;
            text-decoration: none;
        }

        strong {
            font-weight: bold;
        }

        /*error is up*/

        p {
            margin: 0.75rem 0 0;
        }

        h1 {
            font-size: 0.75rem;
            font-weight: normal;
            margin: 0;
            padding: 0;
        }

        input,
        button {
            border: 0 none;
            outline: 0 none;
        }

        button {
            background-color: #17a2b8;
            color: #fff;
        }

            button:hover,
            button:focus {
                background-color: #555;
            }

        img,
        .basket-module,
        .basket-labels,
        .basket-product {
            width: 100%;
        }

        input,
        button,
        .basket,
        .basket-module,
        .basket-labels,
        .item,
        .price,
        .quantity,
        .subtotal,
        .basket-product,
        .product-image,
        .product-details {
            float: left;
        }

            .price:before,
            .subtotal:before,
            .subtotal-value:before,
            .total-value:before,
            .promo-value:before {
                content: ' ';
            }

        .hide {
            display: none;
        }

        main {
            /*clear: both;
            font-size: 1.55rem;
            overflow: hidden;
            padding: 1rem 0;*/
            font-family: 'Montserrat';
        }

        .basket,
        aside {
            padding: 0 1rem;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        .basket {
            width: 79%;
        }

        .basket-module {
            color: #111;
        }

        label {
            display: block;
            margin-bottom: 0.3125rem;
        }

        .promo-code-field {
            border: 1px solid #ccc;
            padding: 0.5rem;
            text-transform: uppercase;
            transition: all 0.2s linear;
            width: 48%;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            -o-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        }

            .promo-code-field:hover,
            .promo-code-field:focus {
                border: 1px solid #999;
            }

        .promo-code-cta {
            border-radius: 4px;
            font-size: 0.625rem;
            margin-left: 0.625rem;
            padding: 0.6875rem 1.25rem 0.625rem;
        }

        .basket-labels {
            border-top: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
            margin-top: 1.625rem;
        }

        ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        li {
            color: #111;
            display: inline-block;
        }

            li.price:before,
            li.subtotal:before {
                content: '';
            }


        .item {
            width: 55%;
        }

        .price,
        .quantity,
        .subtotal {
            width: 15%;
        }

        .subtotal {
            text-align: right;
        }

        .remove {
            bottom: 1.125rem;
            float: right;
            position: absolute;
            right: 0;
            text-align: right;
            width: 45%;
        }

            .remove button {
                background-color: transparent;
                color: #777;
                float: none;
                text-decoration: underline;
                text-transform: uppercase;
            }

        .item-heading {
            padding-left: 4.375rem;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        .basket-product {
            border-bottom: 1px solid #ccc;
            padding: 1rem 0;
            position: relative;
        }

        .product-image {
            width: 35%;
        }

        .product-details {
            width: 65%;
        }

        .product-frame {
            border: 1px solid #aaa;
        }

        .product-details {
            padding: 0 1.5rem;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        .quantity-field {
            background-color: #ccc;
            border: 1px solid #aaa;
            border-radius: 4px;
            font-size: 1.555rem;
            padding: 3px;
            width: 6.75rem;
        }

        aside {
            float: right;
            position: relative;
            width: 19%;
        }

        .summary {
            background-color: #eee;
            border: 1px solid #aaa;
            padding: 1rem;
            position: fixed;
            width: 250px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        .summary-total-items {
            color: #666;
            font-size: 1.555rem;
            text-align: center;
        }

        .summary-subtotal,
        .summary-total {
            border-top: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
            clear: both;
            margin: 1rem 0;
            overflow: hidden;
            padding: 0.5rem 0;
        }

        .subtotal-title,
        .subtotal-value,
        .total-title,
        .total-value,
        .promo-title,
        .promo-value {
            color: #111;
            float: left;
            width: 50%;
        }

        .summary-promo {
            -webkit-transition: all .3s ease;
            -moz-transition: all .3s ease;
            -o-transition: all .3s ease;
            transition: all .3s ease;
        }

        .promo-title {
            float: left;
            width: 70%;
        }

        .promo-value {
            color: #8B0000;
            float: left;
            text-align: right;
            width: 30%;
        }

        .summary-delivery {
            padding-bottom: 3rem;
        }

        .subtotal-value,
        .total-value {
            text-align: right;
        }

        .total-title {
            font-weight: bold;
            text-transform: uppercase;
        }

        .summary-checkout {
            display: block;
        }

        .checkout-cta {
            display: block;
            float: none;
            font-size: 1.555rem;
            text-align: center;
            text-transform: uppercase;
            padding: 0.625rem 0;
            width: 100%;
        }

        .summary-delivery-selection {
            background-color: #ccc;
            border: 1px solid #aaa;
            border-radius: 4px;
            display: block;
            font-size: 1.555rem;
            height: 34px;
            width: 100%;
        }

        .newArtB:hover, newArtB:active {
            color: #3BE7EE;
        }

        .newArtB:hover, newArtB:active {
            background-color: #3094FF;
        }

        .newArtB:hover, newArtB:active {
            font-size: 150%;
        }
    </style>

</head>

<!--IF THEN ELSE PARA SE O CARRINHO ESTIVER VAZIO-->
@{int count = 0; double totalPrice = 0; int index = 0; double precoCupao = 0; double oferta = 0; int valorOf = 0; string oioi = "";

    foreach (var item in Model)
    {
        count++;
    }
    if (count == 0)
    {
        <br />
        <br />
        <br />
        <center>
            <div style="color:#555555; font-size:16px; font-weight:bold;">
                <b>O seu carrinho está vazio!</b>
            </div>
        </center>
        <br />
        <br />
        <center>
            <a href='@Url.Action("Index", "Utilizador")' class="btn btn-login-large newArtB" style="font-weight: 700; font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; border-color: rgb(17, 112, 158); ">
                Continuar a comprar
            </a>
        </center>
        <br />
    }
    else
    {
        <html lang="en">

        <head>
            <meta charset="utf-8">
            <meta http-equiv="x-ua-compatible" content="ie=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>Basket</title>
        </head>

        <body>
            <main>
                <div class="basket">
                    <div class="basket-module">
                        <br />
                        <label for="promo-code">Carrinho de Compras</label>
                    </div>
                    <div class="basket-labels">
                        <ul>
                            <li class="item item-heading">Artigo</li>
                            <li class="price">Preço</li>
                            <li class="quantity">Quantidade</li>
                            <li class="subtotal">Total</li>
                        </ul>
                    </div>
                    @foreach (var item in Model)
                    {
                        totalPrice += item.Preco * item.Quantidade;
                        <div class="basket-product">
                            <div class="item">
                                <div class="product-image">


                                    @{var fileName = @item.IdArtigoNavigation.Imagem;
                                        String[] words = fileName.Split(" ");
                                        String itempic = words[0];
                                    }

                                    <img src="~/uploads/@itempic" alt="Placholder Image 2" class="product-frame">


                                </div>
                                <div class="product-details">
                                    <p>
                                        <a href="@Url.Action("Details", new { idArtigo = item.IdArtigo })">

                                            @Html.DisplayFor(modelItem => item.IdArtigoNavigation.Nome)
                                        </a>
                                    </p>
                                    <p>Código do Artigo - @Html.DisplayFor(modelItem => item.IdArtigo)</p>
                                </div>
                            </div>
                            <div class="price">@Html.DisplayFor(modelItem => item.Preco) €</div>
                            @{ var maxQuant = @item.IdArtigoNavigation.Quantidade;}
                        <div class="quantity">
                            <input id="getget" type="number" value="@Html.DisplayFor(modelItem => item.Quantidade)" min="1" max="@maxQuant" class="quantity-field">
                            <p id="resposta" style="color:brown">
                            </p>
                            <p id="resposta2" style="color:white">
                            </p>
                        </div>
                            <div class="subtotal">@Html.DisplayFor(modelItem => item.Preco).00</div>
                            <div class="remove">
                                <button>@Html.ActionLink("Remover", "RemArtCarrinho", "Utilizador", new { idVenda = item.IdVenda }, null)</button>
                            </div>
                        </div>
                    }
                </div>

                <aside>
                    <br />
                    <div class="summary">
                        <div class="summary-total-items"><span class="total-items"></span> Itens no Carrinho</div>
                        <div class="summary-subtotal">
                            <div class="subtotal-title">Subtotal</div>
                            <div class="subtotal-value final-value" id="basket-subtotal">@totalPrice.00</div>
                            <div class="summary-promo hide">
                                <div class="promo-title">Propoção</div>
                                <div class="promo-value final-value" id="basket-promo"></div>
                            </div>
                        </div>@{ double guarda = totalPrice;}
                        @{ double pp = totalPrice; int ittt = 0;
                            foreach (var item1 in Model.FirstOrDefault().IdUtilizadorNavigation.Voucher)
                            {
                                oferta = Model.FirstOrDefault().IdUtilizadorNavigation.Voucher.ElementAtOrDefault<Voucher>(ittt).ValorOferta;
                                oioi += oferta;
                                oioi += ",";
                                ittt++;
                            }
                        }
                        <a> Adicione um Voucher:</a>
                        <div class="summary-delivery">
                            <select id="list" name="delivery-collection" amiga="@oioi" onchange="getSelectValue()" onclick="recalculateCart(true)" class="summary-delivery-selection">
                                @{ int index2 = 0;}
                                <option value=@index2 selected="selected">Selecione Voucher</option>
                                @foreach (var item1 in Model.FirstOrDefault().IdUtilizadorNavigation.Voucher)
                                {
                                    index2 = index2 + 1;
                                    <option value=@index2>@Html.DisplayFor(modelItem => item1.Codigo)</option>

                                }
                            </select>
                        </div>
                        <div class="summary-total">
                            <div class="total-title">Total</div>
                            <div class="total-value final-value" id="basket-total">@guarda.00</div>

                        </div>
                        <div class="summary-checkout">
                            <button class="checkout-cta">
                                <a href="/Utilizador/FinalizarCompra" style="
    color: azure;
">Checkout</a>
                            </button>
                        </div>
                    </div>
                </aside>
            </main>
            <div class="noprint"
                 id="gfg" style="
                                color: #6c757d00;
                                ">
            </div>
        </body>

    </html>


}
}


<script >
    var promoCode;
    var promoPrice;
    var fadeTime = 300;

    /* Assign actions */
    $('.quantity input').change(function () {
        updateQuantity(this);
    });

    $('.remove button').click(function () {
        removeItem(this);
    });

    $(document).ready(function () {
        updateSumItems();
    });

    $('.promo-code-cta').click(function () {

        promoCode = $('#promo-code').val();

        if (promoCode == '10off' || promoCode == '10OFF') {
            //If promoPrice has no value, set it as 10 for the 10OFF promocode
            if (!promoPrice) {
                promoPrice = 10;
            } else if (promoCode) {
                promoPrice = promoPrice * 1;
            }
        } else if (promoCode != '') {
            alert("Invalid Promo Code");
            promoPrice = 0;
        }
        //If there is a promoPrice that has been set (it means there is a valid promoCode input) show promo
        if (promoPrice) {
            $('.summary-promo').removeClass('hide');
            $('.promo-value').text(promoPrice.toFixed(2));
            recalculateCart(true);
        }
    });


    function getSelectValue() {
        var selectedValue = document.getElementById("list").value;
        valorOf = selectedValue;
        // console.log(valorOf);

        //var div1 = document.getElementById("div1");
        var align = document.getElementById("list").getAttribute("amiga");
        var arr = align.split(",").map(Number);
        // console.log(arr);
        if (valorOf == 0) {
            var nova = 0;
            document.getElementById("gfg").innerHTML = nova;
        }
        else {
            var nova = arr[valorOf - 1];
            // console.log(nova);
            document.getElementById("gfg").innerHTML = nova;
        }
        updateQuantity(true);
    }


   

    /* Recalculate cart */
    function recalculateCart(onlyTotal) {
        var subtotal = 0;
       // console.log("entrei");
        /* Sum up row totals */
        $('.basket-product').each(function () {
            subtotal += parseFloat($(this).children('.subtotal').text());
        });

        /* Calculate totals */
         var total = subtotal;
        //Se existir uma promoção retira ao preço. No entanto apenas se a compra ultrapassar o valor da promoçao
        var promoPrice = parseFloat(document.getElementById("gfg").innerText);
        if (promoPrice) {
            if (subtotal >= promoPrice) {
                total -= promoPrice;
            } else {
                alert('A compra deve ser mais elevada para usar este cupão.');
                $('.summary-promo').addClass('hide');
            }
        }

        /*If switch for update only total, update only total display*/
        if (onlyTotal) {
            /* Update total display */
            $('.total-value').fadeOut(fadeTime, function () {
                $('#basket-total').html(total.toFixed(2));
                $('.total-value').fadeIn(fadeTime);
            });
        } else {
            /* Update summary display. */
            $('.final-value').fadeOut(fadeTime, function () {
                $('#basket-subtotal').html(subtotal.toFixed(2));
                $('#basket-total').html(total.toFixed(2));
                if (total == 0) {
                    $('.checkout-cta').fadeOut(fadeTime);
                } else {
                    $('.checkout-cta').fadeIn(fadeTime);
                }
                $('.final-value').fadeIn(fadeTime);
            });
        }
    }


    /* Actualiza Quantidade */
    function updateQuantity(quantityInput) {
        /* Calcular preço por linha */
        var productRow = $(quantityInput).parent().parent();
        var price = parseFloat(productRow.children('.price').text());
        var quantity = $(quantityInput).val();
        var linePrice = price * quantity;

        /* Notificação caso o número seja o número máximo definido*/
        var quantidadeMax = document.getElementById("getget");
        var noo = quantidadeMax.getAttribute("max");
        if (noo == quantity) {
            document.getElementById("resposta").innerHTML = "Quantidade máxima permitida!"; document.getElementById("resposta").style.visibility = "visible";
        }
        else document.getElementById("resposta").style.visibility = "hidden";


        /* Recalcular total do carrinho */
        productRow.children('.subtotal').each(function () {
            $(this).fadeOut(fadeTime, function () {
                $(this).text(linePrice.toFixed(2));
                recalculateCart();
                $(this).fadeIn(fadeTime);
            });
        });

        productRow.find('.item-quantity').text(quantity);
        updateSumItems();
    }

    function updateSumItems() {
        var sumItems = 0;
        $('.quantity input').each(function () {
            sumItems += parseInt($(this).val());
        });
        $('.total-items').text(sumItems);
    }

    /* Remove item from cart */
    function removeItem(removeButton) {
        /* Remove row from DOM and recalc cart total */
        var productRow = $(removeButton).parent().parent();
        productRow.slideUp(fadeTime, function () {
            productRow.remove();
            recalculateCart();
            updateSumItems();
        });
    }

 
</script>