@model IEnumerable<WebApplication1.Models.Venda>

@{
    ViewBag.Title = "Venda";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}

<head>
    <head>
        @section NotId {
            <li>
                <a href="@Url.Action("AluguerInfo", "Utilizador")">
                    <span class="glyphicon glyphicon-bell "></span>
                    Notificações
                    @{
                        int n = (int)@ViewData["noti"];
                        if (n > 0)
                        {

                            <span class="badge" style="background-color: #138AB2">@n</span>
                        }
                    }
                </a>
            </li>
        }
    </head>

    <style>
        * ===== Actual Styles ===== */
        /* ===== Horizontal Rule ===== */
        .rule {
            margin: 10px 0;
            border: none;
            height: 1.5px;
            background-image: linear-gradient(left, #f0f0f0, #c9bbae, #f0f0f0);
        }

        /* ===== Select Box ===== */
        .sel {
            font-size: 1rem;
            display: inline-block;
            margin: 3em 2em;
            width: 350px;
            background-color: transparent;
            position: relative;
            cursor: pointer;
        }

            .sel::before {
                position: absolute;
                content: '\f063';
                font-family: 'FontAwesome';
                font-size: 2em;
                color: #FFF;
                right: 20px;
                top: calc(50% - 0.5em);
            }

            .sel.active::before {
                transform: rotateX(-180deg);
            }

        .sel__placeholder {
            display: block;
            font-family: 'Quicksand';
            font-size: 2.3em;
            color: #838e95;
            padding: 0.2em 0.5em;
            text-align: left;
            pointer-events: none;
            user-select: none;
            visibility: visible;
        }

        .sel.active .sel__placeholder {
            visibility: hidden;
        }

        .sel__placeholder::before {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 0.2em 0.5em;
            content: attr(data-placeholder);
            visibility: hidden;
        }

        .sel.active .sel__placeholder::before {
            visibility: visible;
        }

        .sel__box {
            position: absolute;
            top: calc(100% + 4px);
            left: -4px;
            display: none;
            list-style-type: none;
            text-align: left;
            font-size: 1em;
            background-color: #FFF;
            width: calc(100% + 8px);
            box-sizing: border-box;
        }

        .sel.active .sel__box {
            display: block;
            animation: fadeInUp 500ms;
        }

        .sel__box__options {
            display: list-item;
            font-family: 'Quicksand';
            font-size: 1.5em;
            color: #838e95;
            padding: 0.5em 1em;
            user-select: none;
        }

            .sel__box__options::after {
                content: '\f00c';
                font-family: 'FontAwesome';
                font-size: 0.5em;
                margin-left: 5px;
                display: none;
            }

            .sel__box__options.selected::after {
                display: inline;
            }

            .sel__box__options:hover {
                background-color: #ebedef;
            }

        /* ----- Select Box Black Panther ----- */
        .sel {
            border-bottom: 4px solid rgba(0, 0, 0, 0.3);
        }

        .sel--black-panther {
            z-index: 3;
        }

        /* ----- Select Box Superman ----- */
        .sel--superman {
            /*   display: none; */
            z-index: 2;
        }
    </style>

</head>

<!--IF THEN ELSE PARA SE O CARRINHO ESTIVER VAZIO-->
@{int count = 0; double totalPrice = 0; int index = 0; double precoCupao = 0;

    foreach (var item in Model)
    {
        count++;
    }
    if (count == 0)
    {
        <center>
            <b>O seu carrinho está vazio!</b>
            <p>  </p>
        </center>
        <button style=" margin:0 auto; display:block;">
            @Html.ActionLink("Continuar a comprar", "Index", "Utilizador")
        </button>
    }
    else
    {

        <table class="table">
            <tr>
                <th style="text-align:center; vertical-align:middle">
                    <!--@Html.DisplayNameFor(model => model.IdArtigoNavigation.Nome) <h6><b>de artigos</b></h6>-->
                    Nome
                </th>
                <th style="text-align:center; vertical-align:middle">
                    <!--@Html.DisplayNameFor(model => model.Quantidade) <h6><b>de artigos</b></h6>-->
                    Quantidade
                </th>
                <th style="text-align: center; vertical-align: middle">
                    @Html.DisplayNameFor(model => model.Preco) <b> (€)</b>
                </th>
                <th style="text-align:center; vertical-align:middle">
                    Imagens
                </th>
                <th style="text-align:center; vertical-align:middle">
                </th>


            </tr>
            @foreach (var item in Model)
            {
                totalPrice += item.Preco;
                <tr>
                    <td style="text-align:center; vertical-align:middle; font-weight:bold">
                        <a href="@Url.Action("Details", new { idArtigo = item.IdArtigo })">@Html.DisplayFor(modelItem => item.IdArtigoNavigation.Nome)</a>
                    </td>
                    <td style="text-align:center; vertical-align:middle">
                        @Html.DisplayFor(modelItem => item.Quantidade)
                    </td>
                    <td style="text-align:center; vertical-align:middle">
                        @Html.DisplayFor(modelItem => item.Preco)
                    </td>
                    <td style="width:250px; height:250px; text-align:center; vertical-align:middle">
                        <div class="w3-content w3-display-container">

                            @{var fileName = @item.IdArtigoNavigation.Imagem;
                                String[] words = fileName.Split(" ");
                                String itempic = words[0];
                            }
                            <img class="card-img-top" src="~/uploads/@itempic" alt="" style="max-width:250px ; max-height:250px">

                        </div>
                    </td>
                    <td style="text-align:center; vertical-align:middle">
                        @Html.ActionLink("Remover do Carrinho", "RemArtCarrinho", "Utilizador", new { idVenda = item.IdVenda }, null)
                    </td>

                </tr>
            }
        </table>

        precoCupao = totalPrice;
        <p></p>
        <p></p>


        <p style="text-align:center; font-weight:bold">
            Total de Compra:
            <td>
                @totalPrice €
            </td>
        </p>
        <p></p>
        <p></p>


        <div class="sel sel--black-panther">
            <select name="Escolha Voucher" id="select-profession">
                <option value="0" disabled>Voucher a aplicar</option>
                index++;
                @foreach (var item1 in Model.FirstOrDefault().IdUtilizadorNavigation.Voucher)
                {

                    <option value="index">@Html.DisplayFor(modelItem => item1.Codigo)</option>
                    index++;
                }
            </select>
        </div>

        <hr class="rule">


        <script>
            /* ===== Logic for creating fake Select Boxes ===== */
            $('.sel').each(function () {
                $(this).children('select').css('display', 'none');

                var $current = $(this);

                $(this).find('option').each(function (i) {
                    if (i == 0) {
                        $current.prepend($('<div>', {
                            class: $current.attr('class').replace(/sel/g, 'sel__box')
                        }));

                        var placeholder = $(this).text();
                        $current.prepend($('<span>', {
                            class: $current.attr('class').replace(/sel/g, 'sel__placeholder'),
                            text: placeholder,
                            'data-placeholder': placeholder
                        }));

                        return;
                    }

                    $current.children('div').append($('<span>', {
                        class: $current.attr('class').replace(/sel/g, 'sel__box__options'),
                        text: $(this).text()
                    }));
                });
            });

            // Toggling the `.active` state on the `.sel`.
            $('.sel').click(function () {
                $(this).toggleClass('active');
            });

            // Toggling the `.selected` state on the options.
            $('.sel__box__options').click(function () {
                var txt = $(this).text();
                var index = $(this).index();

                $(this).siblings('.sel__box__options').removeClass('selected');
                $(this).addClass('selected');

                var $currentSel = $(this).closest('.sel');
                $currentSel.children('.sel__placeholder').text(txt);
                $currentSel.children('select').prop('selectedIndex', index + 1);
                //precoCupao = totalPrice - Model.FirstOrDefault().IdUtilizadorNavigation.Voucher.ElementAt<Voucher>(txt).ValorOferta;
            });

        </script>
        <!--
                <div class="custom-select-lg" style="text-align:center;">
                    <select>

                        <option value="0">Selecione Cupão:</option>
                        index++;
                        foreach (var item1 in Model.FirstOrDefault().IdUtilizadorNavigation.Voucher)
                        {
                            <option value="index">Html.DisplayFor(modelItem => item1.Codigo)</option>
                            precoCupao = totalPrice - Model.FirstOrDefault().IdUtilizadorNavigation.Voucher.ElementAt<Voucher>(index - 1).ValorOferta;
                            index++;

                        }

                    </select>
                </div>
        -->
        <p></p>
        <p></p>

        <p style="text-align:center; font-weight:bold">
            Total de Compra Com Cupão:
            <td>
                @precoCupao €
            </td>
        </p>

        <p></p>
        <p></p>

        <center>
            <button class="myButton">
                @Html.ActionLink("Finalizar Compra", "FinalizarCompra")
            </button>
        </center>

    }
}
